Title = Sostie Graphics v1.57.0223
// Advanced Graphics Library Systems
// BEGIN DESCRIPTION BLOCK ***
// This Graphics Library Was Created By MayOS Inc.
// Making Good Better.
// Use Import Module To "import cube.*;".
// Conpleted Task Was Getting Far.
// END DESCPIPTION BLOCK ***

// BEGIN LICENSE BLOCK
// This graphics is Advanced Basic Graphics.
// requires Middle Spec GPU.
// Lower Spec GPU Was Do Lagging.
// if you edit and save this graphics, do guideline license "MayOS Protection License".
// END LICENSE BLOCK

may_info = {
    "name": "Sostie Graphics",
    "author": "MayOS Inc",
    "version": (1.34.2332),
    "location": "Render > Graphics > Mode",
    "description": "FPS Graphics For MayOS",
    "warning": "Will be Exeprimental Graphics",
    "category": "Graphics",
    "library_version": (1.582.0535a),
    "engine_version": (5.242b),
    "engine": "MayOS Graphics Engine",
    "raycastengine": "MayOS GL Realistic Raycast Engine",
} 

import lib.gl.1d;
import lib.gl.cpu;
import lib.gl.3d;
import lib.gl.2d;
import lib.gl.4d;
import lib.gl.color;
import lib.gl.resolution;
import lib.gl.graphics;
import lib.gl.raycast;
1D=X
2D=X,Y
3D=X,Y,Z
4D=W,X,Y,Z
Color=256bits
bits={
  1
  2
  4
  8
  16
  32
  64
  128
  256
  312
  512
  1024
  5000
}
RGB={
Red 255
  set red.color = {r-255, g-0, b-0}
  set orange.color = {r-255, g-102, b-0}
  set yellow.color = {r-255, g-242, b-0}
  set green.color = {r-0, g-255, b-0}
  set Lightblue.color = {r-0, g-255, b-255}
  set blue.color = {r-0, g-0, b-255}
  set pink.color = {r-255, g-0, b-255}
  Green 255
  Blue 255
}
HSV={
  Hue.color
  Saturation.color
  Valve.color
}
Resolution= {
  120 144p
  240 240p
  360 360p
  480 480p
  560 560p
  720 720p
  1080 1080p
  2160 2k
  3240 3k
  4320 4k
  8120 8k
}
Graphics
NVIDIA GeForce RTX =
if graphicsc = nvidia.geforcertx
enable Ray.Tracing
NVIDIA GeForce GTX
if graphicsc = nvidia.geforcegtx
enable Ray.Tracing
Intel HD Graphics
if graphicsc = intel.hdgraphics
disable Ray.Tracing
Ray.Tracing
Shadow 0.0






script = {
  class shadowdraw {
    int shadowres = 0.6
    int farres = 0.23
    // Looping as inf.
    forever {
      // easy say i say.. when find the unstable(Says, Shadow) at sun.
      find sun.angle unstable
      if unstable finded {
        // wait to drawing shadow at screen.
        wait(framerate)
        draw unstable shadowres
        if shadow.dist = mid {
          blur dist.mid 1+dist
        }
      }
    }
  }
  
  class 
}
G Effect
Wave = {CuSc=sine~effectassect}
orta = {CuSc=bit~effectassect}
dist = {CuSc=post~effectassect}